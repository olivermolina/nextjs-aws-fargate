name: deploy

on:
  push:
    branches:
      - master
      - main
    paths-ignore:
      - '**.md'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install & Build
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.3.0
          cache: 'yarn'
          cache-dependency-path: 'yarn.lock'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker Login to Amazon ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.login-ecr.outputs.registry }}
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build, tag, and push image to Amazon ECR
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: lunahealthapp:latest
          push: true
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            STYTCH_PROJECT_ENV=${{ secrets.STYTCH_PROJECT_ENV }}
            STYTCH_PROJECT_ID=${{ secrets.STYTCH_PROJECT_ID }}
            NEXT_PUBLIC_STYTCH_PUBLIC_TOKEN=${{ secrets.NEXT_PUBLIC_STYTCH_PUBLIC_TOKEN }}
            CUSTOMER_IO_API_KEY=${{ secrets.CUSTOMER_IO_API_KEY }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_S3_REGION=${{ secrets.AWS_S3_REGION }}
            AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}
            QSTASH_URL=${{ secrets.QSTASH_URL }}
            QSTASH_TOKEN=${{ secrets.QSTASH_TOKEN }}
            QSTASH_CURRENT_SIGNING_KEY=${{ secrets.QSTASH_CURRENT_SIGNING_KEY }}
            QSTASH_NEXT_SIGNING_KEY=${{ secrets.QSTASH_NEXT_SIGNING_KEY }}
            NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}
            NEXT_PUBLIC_STRIPE_CONNECT_CLIENT_ID=${{ secrets.NEXT_PUBLIC_STRIPE_CONNECT_CLIENT_ID }}
            PUSHER_APP_ID=${{ secrets.PUSHER_APP_ID }}
            PUSHER_APP_SECRET=${{ secrets.PUSHER_APP_SECRET }}
            NEXT_PUBLIC_PUSHER_APP_KEY=${{ secrets.NEXT_PUBLIC_PUSHER_APP_KEY }}
            NEXT_PUBLIC_PUSHER_APP_CLUSTER=${{ secrets.NEXT_PUBLIC_PUSHER_APP_CLUSTER }}
            NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            WHO_ICD_API_CLIENT_ID=${{ secrets.WHO_ICD_API_CLIENT_ID }}
            WHO_ICD_API_CLIENT_SECRET=${{ secrets.WHO_ICD_API_CLIENT_SECRET }}
            DAILY_API_KEY=${{ secrets.DAILY_API_KEY }}
            DAILY_REST_DOMAIN=${{ secrets.DAILY_REST_DOMAIN }}
            MESSAGEBIRD_API_KEY=${{ secrets.MESSAGEBIRD_API_KEY }}
          secrets: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            STYTCH_PROJECT_ENV=${{ secrets.STYTCH_PROJECT_ENV }}
            STYTCH_PROJECT_ID=${{ secrets.STYTCH_PROJECT_ID }}
            NEXT_PUBLIC_STYTCH_PUBLIC_TOKEN=${{ secrets.NEXT_PUBLIC_STYTCH_PUBLIC_TOKEN }}
            CUSTOMER_IO_API_KEY=${{ secrets.CUSTOMER_IO_API_KEY }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_S3_REGION=${{ secrets.AWS_S3_REGION }}
            AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}
            QSTASH_URL=${{ secrets.QSTASH_URL }}
            QSTASH_TOKEN=${{ secrets.QSTASH_TOKEN }}
            QSTASH_CURRENT_SIGNING_KEY=${{ secrets.QSTASH_CURRENT_SIGNING_KEY }}
            QSTASH_NEXT_SIGNING_KEY=${{ secrets.QSTASH_NEXT_SIGNING_KEY }}
            NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}
            NEXT_PUBLIC_STRIPE_CONNECT_CLIENT_ID=${{ secrets.NEXT_PUBLIC_STRIPE_CONNECT_CLIENT_ID }}
            PUSHER_APP_ID=${{ secrets.PUSHER_APP_ID }}
            PUSHER_APP_SECRET=${{ secrets.PUSHER_APP_SECRET }}
            NEXT_PUBLIC_PUSHER_APP_KEY=${{ secrets.NEXT_PUBLIC_PUSHER_APP_KEY }}
            NEXT_PUBLIC_PUSHER_APP_CLUSTER=${{ secrets.NEXT_PUBLIC_PUSHER_APP_CLUSTER }}
            NEXT_PUBLIC_GOOGLE_CLIENT_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            WHO_ICD_API_CLIENT_ID=${{ secrets.WHO_ICD_API_CLIENT_ID }}
            WHO_ICD_API_CLIENT_SECRET=${{ secrets.WHO_ICD_API_CLIENT_SECRET }}
            DAILY_API_KEY=${{ secrets.DAILY_API_KEY }}
            DAILY_REST_DOMAIN=${{ secrets.DAILY_REST_DOMAIN }}
            MESSAGEBIRD_API_KEY=${{ secrets.MESSAGEBIRD_API_KEY }}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: infra/task-definitions/service.latest.json
          container-name: lunahealthapp-image
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: lunahealthapp-service
          cluster: lunahealthapp-cluster-node
          wait-for-service-stability: true
